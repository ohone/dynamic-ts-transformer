{"version":3,"file":"dev.js","sourceRoot":"","sources":["../src/dev.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACjD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACpD,MAAM,EAAE,GAAG;;;;;;;;;;;;;;CAcZ,CAAC;IAEA,MAAM,MAAM,GAAG,MAAM,mBAAmB,CACtC,EAAE,EACF,8BAA8B,EAC9B,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,EAChC,CAAC,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,CAAC,EAC5E,KAAK,CACN,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC;AAED;;;;EAIE","sourcesContent":["import { transpileTypescript } from \"./index.js\";\nif (import.meta.url === `file://${process.argv[1]}`) {\n  const i1 = `\n  (function anonymous(window,self,document,name,location,customElements,history,navigation,locationbar,menubar,personalbar,scrollbars,statusbar,toolbar,status,closed,frames,length,top,opener,parent,frameElement,navigator,origin,external,screen,innerWidth,innerHeight,scrollX,pageXOffset,scrollY,pageYOffset,visualViewport,screenX,screenY,outerWidth,outerHeight,devicePixelRatio,event,clientInformation,screenLeft,screenTop,styleMedia,onsearch,isSecureContext,trustedTypes,performance,onappinstalled,onbeforeinstallprompt,crypto,indexedDB,sessionStorage,localStorage,onbeforexrselect,onabort,onbeforeinput,onbeforematch,onbeforetoggle,onblur,oncancel,oncanplay,oncanplaythrough,onchange,onclick,onclose,oncontentvisibilityautostatechange,oncontextlost,oncontextmenu,oncontextrestored,oncuechange,ondblclick,ondrag,ondragend,ondragenter,ondragleave,ondragover,ondragstart,ondrop,ondurationchange,onemptied,onended,onerror,onfocus,onformdata,oninput,oninvalid,onkeydown,onkeypress,onkeyup,onload,onloadeddata,onloadedmetadata,onloadstart,onmousedown,onmouseenter,onmouseleave,onmousemove,onmouseout,onmouseover,onmouseup,onmousewheel,onpause,onplay,onplaying,onprogress,onratechange,onreset,onresize,onscroll,onsecuritypolicyviolation,onseeked,onseeking,onselect,onslotchange,onstalled,onsubmit,onsuspend,ontimeupdate,ontoggle,onvolumechange,onwaiting,onwebkitanimationend,onwebkitanimationiteration,onwebkitanimationstart,onwebkittransitionend,onwheel,onauxclick,ongotpointercapture,onlostpointercapture,onpointerdown,onpointermove,onpointerrawupdate,onpointerup,onpointercancel,onpointerover,onpointerout,onpointerenter,onpointerleave,onselectstart,onselectionchange,onanimationend,onanimationiteration,onanimationstart,ontransitionrun,ontransitionstart,ontransitionend,ontransitioncancel,onafterprint,onbeforeprint,onbeforeunload,onhashchange,onlanguagechange,onmessage,onmessageerror,onoffline,ononline,onpagehide,onpageshow,onpopstate,onrejectionhandled,onstorage,onunhandledrejection,onunload,crossOriginIsolated,scheduler,alert,atob,blur,btoa,cancelAnimationFrame,cancelIdleCallback,captureEvents,clearInterval,clearTimeout,close,confirm,createImageBitmap,fetch,find,focus,getComputedStyle,getSelection,matchMedia,moveBy,moveTo,open,postMessage,print,prompt,queueMicrotask,releaseEvents,reportError,requestAnimationFrame,requestIdleCallback,resizeBy,resizeTo,scroll,scrollBy,scrollTo,setInterval,setTimeout,stop,structuredClone,webkitCancelAnimationFrame,webkitRequestAnimationFrame,chrome,caches,cookieStore,ondevicemotion,ondeviceorientation,ondeviceorientationabsolute,launchQueue,sharedStorage,documentPictureInPicture,getScreenDetails,queryLocalFonts,showDirectoryPicker,showOpenFilePicker,showSaveFilePicker,originAgentCluster,onpageswap,onpagereveal,credentialless,fence,speechSynthesis,onscrollend,onscrollsnapchange,onscrollsnapchanging,webkitRequestFileSystem,webkitResolveLocalFileSystemURL,sandbox,items,projectConfig,background,observedComponent,executionContext,context,sharedObjects,sharedState,ripulConfig,config,resumeProject,exitProject,getConfig,getFullConfig,asyncIterate,__newFunction\n) {\nreturn (async function () {\n    async function handleAutomaticPrompt(history: PromptedAction[]) {\n        const dom = await background.minimizeDOM(ripulConfig.tabId);\n        let responseIntent = '';\n        for await (const item of history) {\n            responseIntent += await (item.isProxy ? await item[\"responseIntent\"]() : item[\"responseIntent\"]) + '\\n';\n        }\n        responseIntent = responseIntent.slice(0, -1);\n        const userPrompt = history[0].userPrompt;\n    }\n})();})\n`;\n\n  const result = await transpileTypescript(\n    i1,\n    \"http://localhost:8080/dev.ts\",\n    [\"window\", \"document\", \"chrome\"],\n    [\"sharedState\", \"config\", \"background\", \"IsProxy\", \"ripulConfig\", \"console\"],\n    false\n  );\n\n  console.log(\"--------------------------------\");\n  console.log(result);\n}\n\n/*\n    const input = document.createElement(\"input\");\n    window.addEventListener(\"message\", (event) => {\n      const b = input.value;\n*/\n"]}